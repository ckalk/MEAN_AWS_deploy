{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/client-player.ts","webpack:///./src/app/players/addplayer/addplayer.component.css","webpack:///./src/app/players/addplayer/addplayer.component.html","webpack:///./src/app/players/addplayer/addplayer.component.ts","webpack:///./src/app/players/list/list.component.css","webpack:///./src/app/players/list/list.component.html","webpack:///./src/app/players/list/list.component.ts","webpack:///./src/app/players/players.component.css","webpack:///./src/app/players/players.component.html","webpack:///./src/app/players/players.component.ts","webpack:///./src/app/status/game/game.component.css","webpack:///./src/app/status/game/game.component.html","webpack:///./src/app/status/game/game.component.ts","webpack:///./src/app/status/status.component.css","webpack:///./src/app/status/status.component.html","webpack:///./src/app/status/status.component.ts","webpack:///./src/app/teamdata.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlayersComponent } from './players/players.component';\nimport { ListComponent } from './players/list/list.component';\nimport { AddplayerComponent } from './players/addplayer/addplayer.component';\nimport { StatusComponent } from './status/status.component';\nimport { GameComponent } from './status/game/game.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'players', pathMatch: 'full' },\n\n  { path : 'status', component: StatusComponent, children: [\n    { path: '', redirectTo: 'game/1', pathMatch: 'full'},\n    { path: 'game/:id', component: GameComponent },\n  ]},\n\n  { path: 'players', component: PlayersComponent,   children: [\n    { path: '', redirectTo: 'list' , pathMatch: 'full' },\n    { path: 'list', component: ListComponent },\n    { path: 'addplayer', component: AddplayerComponent }\n    ]}\n  ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".banner {\\n  height: 250px;\\n  width: 100%;\\n  max-height: 50%;\\n  max-width: 100%;\\n  min-height: 20%;\\n  min-width: 30%;\\n  background-image: url('soccer-hero.jpg');\\n  background-size: cover;\\n}\\n\\nh1 {\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  margin-top: 100px;;\\n}\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"jumbotron banner\\\">\\n      <h1 class=\\\"display-4 text-white align-baseline\\\">{{ title }}</h1>\\n  </div>\\n\\n  <!-- navigation bar here -->\\n\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-success\\\">\\n\\n    <a class=\\\"navbar-brand\\\" href=\\\"\\\">Team Manager</a>\\n\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n        <li class=\\\"nav-item ml-5\\\">\\n            <a class=\\\"text-white\\\" [routerLink]=\\\"['players', 'list']\\\">Manage Players</a>\\n          </li>\\n          <li class=\\\"nav-item ml-5\\\">\\n            <a  class=\\\"text-white\\\" [routerLink]=\\\"['status']\\\">Manage Player Status</a>\\n          </li>\\n\\n      </ul>\\n\\n    </div>\\n\\n  </nav>\\n\\n   <!-- content body here, depending on nav option chosen -->\\n\\n  <router-outlet></router-outlet>\\n\\n  <hr class='mt-5'>\\n\\n  <footer>\\n      <p>&copy; Kalkulations 2018</p>\\n  </footer>\\n\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Team Manager';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TeamdataService } from './teamdata.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PlayersComponent } from './players/players.component';\nimport { StatusComponent } from './status/status.component';\nimport { ListComponent } from './players/list/list.component';\nimport { AddplayerComponent } from './players/addplayer/addplayer.component';\nimport { GameComponent } from './status/game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlayersComponent,\n    StatusComponent,\n    ListComponent,\n    AddplayerComponent,\n    GameComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    TeamdataService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n","// Angular blueprint for  single player.\n// I think it's important to name the attributes the same to allow for ease in sending json response directly to database\n\nexport class ClientPlayer {\n  _id: string;\n  player_name: string;\n  pref_position: string;\n  game1_status:  string;\n  game2_status:  string;\n  game3_status:  string;\n\n  constructor() {\n    this.player_name = '';\n    this.pref_position = '';\n    this.game1_status = 'Undecided';\n    this.game2_status = 'Undecided';\n    this.game3_status = 'Undecided';\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card mt-2\\\">\\n\\n  <h3 class=\\\"card-header primary-color white-text\\\">\\n    Add Player\\n  </h3>\\n\\n  <div class=\\\"card-body\\\">\\n\\n    <form (submit)='onSubmit($event, formData)' #formData='ngForm'>\\n\\n    <!-- player_name field -->\\n      <div class=\\\"form-group row\\\">\\n\\n        <div class = 'col-sm-8'>\\n          <input\\n          name ='player_name'\\n          placeholder =\\\"Enter player name\\\"\\n          type ='text'\\n          class ='form-control'\\n          required\\n          minlength ='2'\\n          #player_name = 'ngModel'\\n          [(ngModel)] ='player.player_name'\\n          />\\n        </div>\\n\\n        <div *ngIf=\\\"player_name.invalid && (player_name.dirty || player_name.touched)\\\"\\n        class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"player_name.errors.required\\\">\\n              Player name is required.\\n          </div>\\n\\n          <div *ngIf=\\\"player_name.errors.minlength\\\">\\n              Name must be at least {{ player_name.errors.minlength.requiredLength }} characters long.\\n          </div>\\n        </div>\\n      </div>\\n\\n    <!-- pref_position field -->\\n      <div class=\\\"form-group row\\\">\\n\\n        <div class = 'col-sm-8'>\\n          <select\\n            name=\\\"pref_position\\\"\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            #pref_position = 'ngModel'\\n            [(ngModel)] ='player.pref_position'>\\n            <option\\n            *ngFor='let pos of soccerPositions()'\\n            value=\\\"{{ pos }}\\\">\\n            {{ pos }}\\n            </option>\\n          </select>\\n\\n\\n<!--           <input\\n          name ='pref_position'\\n          placeholder =\\\"Enter player's preferred position\\\"\\n          type ='text'\\n          class ='form-control'\\n          #pref_position = 'ngModel'\\n          [(ngModel)] ='player.pref_position'\\n          /> -->\\n        </div>\\n\\n      </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n      <p *ngIf = 'formData.invalid && formData.dirty' class = 'errors' class = 'alert alert-danger'> You can submit after fixing any errors shown above</p>\\n      <div class = 'row col-sm-8 justify-content-end'>\\n        <button type = 'submit' class = 'btn btn-primary' [disabled] = 'formData.invalid'>\\n          Add Player\\n        </button>\\n      </div>\\n\\n    </form>\\n\\n  </div>\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ClientPlayer } from '../../client-player';\nimport { TeamdataService } from '../../teamdata.service';\n\n@Component({\n  selector: 'app-addplayer',\n  templateUrl: './addplayer.component.html',\n  styleUrls: ['./addplayer.component.css']\n})\nexport class AddplayerComponent implements OnInit {\n  player: ClientPlayer = new ClientPlayer();\n\n  constructor( private _router: Router, private _teamService: TeamdataService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(event: Event, formData: NgForm) {\n\n    event.preventDefault();\n    console.log('in addplayer component onSubmit with new player: ', this.player);\n\n    // on submit of form, call _teamService.createPlayer to add new product to db\n    this._teamService.createPlayer(this.player).subscribe();\n\n    // reset the product for next createProduct\n    this.player = new ClientPlayer();\n\n    // redirect to player listing route\n    this._router.navigateByUrl('/players/list');\n  }\n\n// helper function for perferred position seletion - forward, midfielder, defender, sweeper, or goalkeeper\n  soccerPositions() {\n    const positions: string[] = [];\n    positions[0] = 'Defender';\n    positions[1] = 'Forward';\n    positions[2] = 'Goalkeeper';\n    positions[3] = 'Midfielder';\n    positions[4] = 'Sweeper';\n    return positions;\n    }\n\n}\n\n","module.exports = \"\"","module.exports = \"\\n<table class=\\\"mt-2 table table-striped table-bordered\\\">\\n\\n  <thead class=\\\"thead\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">Player Name</th>\\n      <th scope=\\\"col\\\">Preferred Position</th>\\n      <th scope=\\\"col\\\">Actions</th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor='let p of allPlayers'>\\n      <td>{{ p.player_name }}</td>\\n      <td>{{ p.pref_position }}</td>\\n      <td>\\n        <button (click) = 'deleteP(p._id, p.player_name)' class = 'btn btn-danger'>\\n          Delete Player\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ClientPlayer } from '../../client-player';\nimport { TeamdataService } from '../../teamdata.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  player: ClientPlayer = new ClientPlayer();\n  allPlayers: ClientPlayer[] = [];\n\n  constructor( private _teamservice: TeamdataService, private _router: Router ) {\n  }\n\n  ngOnInit() {\n    this.getSlate();\n  }\n\n  getSlate() {\n    this._teamservice.getPlayers()\n    .subscribe(\n     (response: any) => {\n       console.log('list.component.ts call _teamservice.getPlayers() and got response', response);\n\n       this.allPlayers = response;\n       console.log('list.component.ts call _teamservice.getPlayers() allPlayers:', this.allPlayers);\n     },\n     (err) => {\n       console.log('list.component.ts call _teamservice.getPlayers() error:', err);\n     }\n   );\n  }\n\n  deleteP(id, name) {\n\n    console.log('in list.component deletePlayer with player._id: ', id);\n\n    // display confirm window\n    const yesdelete = window.confirm(`Do you really want to delete player ${name}?`);\n\n    // if user clicks yes in confirm window\n    if (yesdelete) {\n      // on click of delete button  call _teamservice to delete product with product.id from db\n      this._teamservice.deletePlayer(id).subscribe(\n        () => {\n          // filter out deleted player in allPlayers\n          this.allPlayers = this.allPlayers.filter( player => player._id !== id);\n          });\n\n       // if user clicks cancel in confirm window\n      } else {\n        console.log('in list.component deletePlayer window yesdelete and user cancelled, so do nothing');\n        }\n    }\n\n}\n\n","module.exports = \"\"","module.exports = \"<div>\\n\\n<!-- players navigation bar here -->\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light mt-1\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"\\\"></a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      <li class=\\\"nav-item ml-1\\\">\\n        <!-- note that since we are in list and addplayer parent path, we only list thc child path in the routerlinl-->\\n\\n        <a class=\\\"text-success\\\" [routerLink]=\\\"['list']\\\">List</a>\\n      </li>\\n      <li class=\\\"nav-item ml-5\\\">\\n        <a  class=\\\"text-success\\\" [routerLink]=\\\"['addplayer']\\\">Add Player</a>\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<!-- content body here, depending on player nav option chosen -->\\n\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.css']\n})\nexport class PlayersComponent {}\n","module.exports = \".undecided {\\n  background-color: yellow;\\n}\\n\\n.playing {\\n  background-color: green;\\n}\\n\\n.notplaying {\\n  background-color: red;\\n}\\n\"","module.exports = \"<h2 class = \\\"text-center\\\">Player Status - Game {{ game_num }}</h2>\\n\\n<table class=\\\"mt-2 table table-striped table-bordered\\\">\\n\\n    <thead class=\\\"thead\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Player Name</th>\\n        <th scope=\\\"col\\\">Actions</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr *ngFor='let p of allPlayers'>\\n\\n        <td>\\n          {{ p.player_name }}\\n        </td>\\n\\n        <td *ngIf = 'game_num === \\\"1\\\"' class = \\\"mx-auto\\\">\\n          <button (click) = 'changeStatus(p, game_num, \\\"Playing\\\")' class = 'btn btn-outline-dark ml-5 mr-5'\\n          [ngClass]=\\\"{ 'playing': ( p.game1_status === 'Playing') }\\\">\\n            Playing\\n          </button>\\n\\n          <button (click) = 'changeStatus(p, game_num, \\\"Not Playing\\\")' class = 'btn btn-outline-dark ml-5 mr-5'\\n          [ngClass]=\\\"{ 'notplaying': (p.game1_status === 'Not Playing') }\\\">\\n            Not Playing\\n          </button>\\n\\n          <button (click) = 'changeStatus(p, game_num, \\\"Undecided\\\")'\\n          [ngClass]=\\\"{ 'undecided': (p.game1_status === 'Undecided') }\\\" class = 'btn btn-outline-dark ml-5 mr-5'>\\n              Undecided\\n          </button>\\n\\n        </td>\\n\\n        <td *ngIf = 'game_num === \\\"2\\\"' class = \\\"mx-auto\\\">\\n          <button (click) = 'changeStatus(p, game_num, \\\"Playing\\\")' class = 'btn btn-outline-dark ml-5 mr-5'\\n          [ngClass]=\\\"{ 'playing': ( p.game2_status === 'Playing') }\\\">\\n            Playing\\n          </button>\\n\\n          <button (click) = 'changeStatus(p, game_num, \\\"Not Playing\\\")' class = 'btn btn-outline-dark ml-5 mr-5'\\n          [ngClass]=\\\"{ 'notplaying': (p.game2_status === 'Not Playing') }\\\">\\n            Not Playing\\n          </button>\\n\\n          <button (click) = 'changeStatus(p, game_num, \\\"Undecided\\\")'\\n          [ngClass]=\\\"{ 'undecided': (p.game2_status === 'Undecided') }\\\" class = 'btn btn-outline-dark ml-5 mr-5'>\\n              Undecided\\n          </button>\\n\\n        </td>\\n\\n        <td *ngIf = 'game_num === \\\"3\\\"' class = \\\"mx-auto\\\">\\n          <button (click) = 'changeStatus(p, game_num, \\\"Playing\\\")' class = 'btn btn-outline-dark ml-5 mr-5'\\n          [ngClass]=\\\"{ 'playing': ( p.game3_status === 'Playing') }\\\">\\n            Playing\\n          </button>\\n\\n          <button (click) = 'changeStatus(p, game_num, \\\"Not Playing\\\")' class = 'btn btn-outline-dark ml-5 mr-5'\\n          [ngClass]=\\\"{ 'notplaying': (p.game3_status === 'Not Playing') }\\\">\\n            Not Playing\\n          </button>\\n\\n          <button (click) = 'changeStatus(p, game_num, \\\"Undecided\\\")'\\n          [ngClass]=\\\"{ 'undecided': (p.game3_status === 'Undecided') }\\\" class = 'btn btn-outline-dark ml-5 mr-5'>\\n              Undecided\\n          </button>\\n\\n        </td>\\n\\n      </tr>\\n\\n    </tbody>\\n\\n  </table>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ClientPlayer } from '../../client-player';\nimport { TeamdataService } from '../../teamdata.service';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  player: ClientPlayer = new ClientPlayer();\n  allPlayers: ClientPlayer[] = [];\n  game_num = '1';\n\n  constructor( private _teamservice: TeamdataService, private _route: ActivatedRoute ) {\n\n    // call on ActivatedRoute to get game number from the current route /status/game/:id\n    this._route.paramMap.subscribe( params => {\n      this.game_num = params.get('id');\n      console.log('in game.component w this.game_num =', this.game_num);\n    });\n\n  }\n\n  ngOnInit() {\n\n    this._teamservice.getPlayers()\n    .subscribe(\n     (response: any) => {\n       this.allPlayers = response;\n       console.log('list.component.ts call _teamservice.getPlayers() allPlayers=response:', this.allPlayers);\n     },\n     (err) => {\n       console.log('list.component.ts call _teamservice.getPlayers() error:', err);\n     }\n   );\n  }\n\n  changeStatus(p: ClientPlayer, game_num: string, status: string) {\n\n    // set this.player to player object returned via changeStatus\n    this.player = p;\n\n    // update player's status for game game_num\n\n    if (game_num === '1') {\n      this.player.game1_status = status;\n    } else if (game_num === '2') {\n      this.player.game2_status = status;\n    } else {\n      this.player.game3_status = status;\n    }\n\n    // call _teamservice.updatePlayer to update player in db\n    this._teamservice.updatePlayer(p._id, this.player).subscribe(\n      () => {\n        // update player status in allPlayers\n        // first get index of player in allPlayers\n\n        const idx = this.allPlayers.findIndex( found_player => found_player._id === p._id);\n\n        // then set that player index (if the player was found in allPlayers) to updated this.player\n        if ( idx > 0 ) {\n          this.allPlayers[idx] = this.player;\n        }\n\n        // reset this.player for next changeStatus\n        this.player = new ClientPlayer();\n      });\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n\\n  <!-- games navigation bar here -->\\n\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light mt-1\\\">\\n\\n    <a class=\\\"navbar-brand\\\" href=\\\"\\\"></a>\\n\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mx-auto\\\">\\n\\n        <li class=\\\"nav-item ml-5 mr-5\\\">\\n          <!-- note that since we are in game parent path, we only list the child path in the routerlink-->\\n          <a class=\\\"text-success\\\" [routerLink]=\\\"['game','1']\\\">Game 1</a>\\n        </li>\\n        <li class=\\\"nav-item ml-5 mr-5\\\">\\n          <a class=\\\"text-success\\\" [routerLink]=\\\"['game','2']\\\">Game 2</a>\\n        </li>\\n        <li class=\\\"nav-item ml-5 mr-5\\\">\\n          <a class=\\\"text-success\\\" [routerLink]=\\\"['game','3']\\\">Game 3</a>\\n        </li>\\n      </ul>\\n\\n    </div>\\n\\n  </nav>\\n\\n  <!-- content body here, depending on game nav option chosen -->\\n\\n    <router-outlet></router-outlet>\\n\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css']\n})\nexport class StatusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// import { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\n// import Angular blueprint for a player\nimport { ClientPlayer } from './client-player';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamdataService {\n\n  player: ClientPlayer;\n\n  players: ClientPlayer[] = [];\n  // players = new BehaviorSubject([]);\n\n// this must agree with what is included in server.js for routes -- server-side page routing\n  private base = '/api/players';\n\n  constructor( private _http: HttpClient ) { }\n\n  getPlayers() {\n    console.log('SERVICE in TeamdataService getPlayers');\n    return this._http.get(this.base);\n  }\n\n  createPlayer(player: ClientPlayer) {\n    console.log('SERVICE in TeamdataService ClientPlayer to add player: ', player);\n    return this._http.post(this.base, player);\n  }\n\n  updatePlayer(_id: string, player: ClientPlayer) {\n    console.log('SERVICE in TeamdataService updatePlayer to change player _id: ', _id, 'to be player:', player);\n\n    console.log('SERVICE in TeamdataService updatePlayer is calling .put route $(this.base)/$(_id): ', `${this.base}/${_id}` );\n    return this._http.put( `${this.base}/${_id}`,  player);\n  }\n\n  deletePlayer(_id: string): Observable<ClientPlayer> {\n    console.log('SERVICE in TeamdataService deleteProduct to delete _id:', _id);\n    console.log('SERVICE in TeamdataService deleteProduct is calling .delete route $(this.base)/$(_id): ', `${this.base}/${_id}` );\n\n    return this._http.delete<ClientPlayer>( `${this.base}/${_id}` );\n  }\n\n  getPlayer(_id: string): Observable<ClientPlayer> {\n    console.log('SERVICE in TeamdataService getPlayer (single) to get _id:', _id);\n    console.log('SERVICE in TeamdataService getPlayer is calling .get route $(this.base)/$(_id): ', `${this.base}/${_id}` );\n    return this._http.get<ClientPlayer>( `${this.base}/${_id}` );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}